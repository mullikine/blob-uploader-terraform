* Blob Uploader Terraform

This repo has the terraform definitions to set up an AWS cluster.

This project is based on the following blog article
[[https://circleci.com/blog/build-a-clojure-web-app-using-duct/][Building a Clojure web application using Duct]].

** Prerequisites

Install Terraform. This repo as been tested on version Terraform v0.14.0-dev.

Set up an AWS account and add a new IAM user with admin privilege.
Generate a new key pair for that user called =blob_uploader_key_pair=.
Copy the =blob_uploader_key_pair.pem= to your =~/.ssh= directory and set
the permissions like so: =chmod 400 ~/.ssh/blob_uploader_key_pair.pem=.

$HOME/hc/aws/27.04.21__1619503705-cd-notes-aws-iam-create-login-profile-user-name-administrator-password-foo-ja-t3chies7pa4pho9eex3chie-zsh.txt
$HOME/hc/aws/26.04.21__1619395768-cd-mygit-mullikine-code-org-tidbits-aws-iam-create-access-key-user-name-administrator-ci.txt
$HOME/hc/aws/26.04.21__1619409964-cd-mygit-mullikine-code-org-tidbits-aws-ec2-create-key-pair-key-name-adminkey-zsh.txt
$NOTES/personal/passwords/aws-administrator.txt

** Initialise Terraform

Change directory to the project directory you cloned this to. Then run:

#+BEGIN_EXAMPLE
    terraform init
#+END_EXAMPLE

** Setup required Environment vars

These Terraform resources require the following variables to be typed in
on every run and will prompt for them:

#+BEGIN_EXAMPLE
    aws_access_key_id
    aws_secret_access_key
#+END_EXAMPLE

If you tire of typing these in you can set the following environment
variables to the appropriate values:

#+BEGIN_EXAMPLE
    export TF_VAR_aws_access_key_id=xxxxxxxx
    export TF_VAR_aws_secret_access_key=xxxxxxxxxxxxxxxxxxx
#+END_EXAMPLE

** Check what will be created

To check what will be created using these Terraform resources, run:

#+BEGIN_EXAMPLE
    terrform plan
    ...
#+END_EXAMPLE

** To apply the changes to AWS

To apply the changes to your AWS account:

#+BEGIN_EXAMPLE
    terraform apply
    ...
#+END_EXAMPLE

** To destroy resources in AWS

To destroy the resources in your AWS account:

#+BEGIN_EXAMPLE
    terraform destroy
#+END_EXAMPLE
